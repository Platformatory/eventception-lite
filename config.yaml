# service:
name: api-log-processor
description: Service to process request-response (or network flow) logs from Kafka topic.

kafka:
  config:
    bootstrapServers: broker:29092
    streamsProperties:
      application.id: "your-application-id"
      default.key.serde: "org.apache.kafka.common.serialization.Serdes$StringSerde"
      default.value.serde: "org.apache.kafka.common.serialization.Serdes$StringSerde"
      state.dir: "/tmp/kafka-streams"
      consumer:
        max.poll.records: 500
        session.timeout.ms: 10000
      producer:
        acks: "all"
        retries: 3
        batch.size: 16384
        linger.ms: 1
      adminClient:
        retries: 5
        request.timeout.ms: 30000
    connectProperties:
      group.id: "eventception-connect"
      key.converter: org.apache.kafka.connect.storage.StringConverter
      value.converter: org.apache.kafka.connect.json.JsonConverter
    authentication:
      sasl.mechanism: "PLAIN"
      security.protocol: "SASL_PLAINTEXT"
      sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='admin' password='admin-secret';"

topologies:
  - name: api-cdc-pipeline
    input:
      topics: "api-logs-.*" # Regex pattern to subscribe to input topics
    processors:
      - type: CelFilter
        name: filter
        celExpression: "request.path == '/orders"
      # - type: JSONTransform
      #   transform:
      #     key: "$.request"
      #     value: "$.response"
      - type: ChangeDataCapture
        name: cdc
        # keyLookupExpression: "request.id"
    output:
      topic: "orders-cdc"
      dlq: "orders-cdc-dlq"

# connectors:
#   - type: WebhookSink
#     name: mylittleservice
#     config:
#       url: http://kong:8000/demo
#       headers: "Content-Type:application/json" # Comma separated
#       authentication:
#         type: basic # none, basic, bearer
#         username: demouser
#         password: OpenSesame